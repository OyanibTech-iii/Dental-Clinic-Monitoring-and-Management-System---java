/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package test;

import javax.swing.JOptionPane;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FindTransactionManagementDate extends javax.swing.JPanel implements TransactionServiceAware {

    private TransactionService transactionService;
    private TransactionManagement transactionManagement; // Reference to update mngmntTbl

    /**
     * Creates new form FindTransactionManagementDate
     */
    public FindTransactionManagementDate() {
        this.transactionService = new TransactionServiceImpl();
        initComponents();
    }

    public FindTransactionManagementDate(TransactionService transactionService, TransactionManagement transactionManagement) {
        this.transactionService = transactionService;
        this.transactionManagement = transactionManagement;
        initComponents();
    }

    @Override
    public void setTransactionService(TransactionService transactionService) {
        this.transactionService = transactionService;
    }

    @Override
    public List<Transaction> getAllTransactions() {
        return transactionService.getAllTransactions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dateFormat = new javax.swing.JTextField();
        SearchBtn = new test.CustomButton();

        setBackground(new java.awt.Color(0, 119, 204));

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Find Transaction By Date");

        jLabel2.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Date :");

        dateFormat.setBackground(new java.awt.Color(0, 119, 204));
        dateFormat.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        dateFormat.setForeground(new java.awt.Color(204, 204, 204));
        dateFormat.setText("Format yyyy-MM-dd");
        dateFormat.setBorder(null);
        dateFormat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dateFormatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateFormatFocusLost(evt);
            }
        });

        SearchBtn.setBackground(new java.awt.Color(0, 51, 0));
        SearchBtn.setBorder(null);
        SearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/searchBtn.png"))); // NOI18N
        SearchBtn.setText("Search Date");
        SearchBtn.setBorderColor(new java.awt.Color(0, 51, 0));
        SearchBtn.setColor(new java.awt.Color(0, 51, 0));
        SearchBtn.setColorClick(new java.awt.Color(0, 51, 0));
        SearchBtn.setColorOver(new java.awt.Color(0, 102, 0));
        SearchBtn.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        SearchBtn.setRadius(8);
        SearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dateFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 132, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseClicked
        // TODO add your handling code here:
        String dateText = dateFormat.getText().trim();

        if (!dateText.isEmpty() && !dateText.equals("Format yyyy-MM-dd")) {
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                sdf.setLenient(false); // Strict parsing
                Date date = sdf.parse(dateText);

                List<Transaction> transactions = transactionService.getTransactionsByDate(date);
                if (!transactions.isEmpty()) {
                    // Update mngmntTbl in TransactionManagement
                    DefaultTableModel model = (DefaultTableModel) transactionManagement.getMngmntTbl().getModel();
                    model.setRowCount(0); // Clear existing rows
                    for (Transaction t : transactions) {
                        Object[] row = {
                            t.getTransactionID(),
                            t.getTransactionDate(),
                            t.getPatient() != null ? t.getPatient().getLastName() + ", " + t.getPatient().getFirstName() : "N/A",
                            t.getTransactionType() != null ? t.getTransactionType().getTypeName() : "N/A",
                            t.getTotalCost(),
                            t.getStatus()
                        };
                        model.addRow(row);
                    }
                    // Success message after loading data
                    JOptionPane.showMessageDialog(this,
                            "Transactions found for date: " + dateText + ". Transactions have been loaded into the table.",
                            "Successfully Found Transaction",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this,
                            "No transactions found for date: " + dateText,
                            "Not Found",
                            JOptionPane.WARNING_MESSAGE);
                }
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this,
                        "Invalid date format. Please use yyyy-MM-dd.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Please enter a valid date.",
                    "Input Required",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_SearchBtnMouseClicked

    private void dateFormatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFormatFocusGained
        // TODO add your handling code here:
        if (dateFormat.getText().equals("Format yyyy-MM-dd")) {
            dateFormat.setText("");
        }
    }//GEN-LAST:event_dateFormatFocusGained

    private void dateFormatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFormatFocusLost
        // TODO add your handling code here:
        if (dateFormat.getText().trim().isEmpty()) {
            dateFormat.setText("Format yyyy-MM-dd");
        }
    }//GEN-LAST:event_dateFormatFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private test.CustomButton SearchBtn;
    private javax.swing.JTextField dateFormat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
