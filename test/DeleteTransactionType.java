/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package test;

import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class DeleteTransactionType extends javax.swing.JPanel {

    /**
     * Creates new form DeleteTransactionType
     */
    public DeleteTransactionType() {
        initComponents();
        deleteResultModal.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deleteIDTxt = new javax.swing.JTextField();
        deleteBtn = new test.CustomButton();
        deleteResultModal = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ttDeleteResult = new javax.swing.JLabel();
        descDeleteResult = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dcDeleteResult = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 119, 204));
        setMaximumSize(new java.awt.Dimension(452, 180));
        setMinimumSize(new java.awt.Dimension(452, 180));
        setPreferredSize(new java.awt.Dimension(452, 180));

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Delete Transaction Type");

        jLabel2.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Transaction Type ID:");

        deleteIDTxt.setBackground(new java.awt.Color(0, 119, 204));
        deleteIDTxt.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        deleteIDTxt.setForeground(new java.awt.Color(255, 255, 255));
        deleteIDTxt.setBorder(null);

        deleteBtn.setBackground(new java.awt.Color(0, 51, 0));
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/deleteBtn.png"))); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.setBorderColor(new java.awt.Color(0, 51, 0));
        deleteBtn.setColor(new java.awt.Color(0, 51, 0));
        deleteBtn.setColorClick(new java.awt.Color(6, 30, 1));
        deleteBtn.setColorOver(new java.awt.Color(0, 153, 0));
        deleteBtn.setFont(new java.awt.Font("Poppins Medium", 1, 12)); // NOI18N
        deleteBtn.setRadius(10);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        deleteResultModal.setBackground(new java.awt.Color(0, 119, 204));

        jLabel3.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Transaction Type:");

        jLabel4.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Description:");

        ttDeleteResult.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        ttDeleteResult.setForeground(new java.awt.Color(255, 255, 255));
        ttDeleteResult.setText("None");

        descDeleteResult.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        descDeleteResult.setForeground(new java.awt.Color(255, 255, 255));
        descDeleteResult.setText("None");

        jLabel7.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Default Cost:");

        dcDeleteResult.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        dcDeleteResult.setForeground(new java.awt.Color(255, 255, 255));
        dcDeleteResult.setText("None");

        javax.swing.GroupLayout deleteResultModalLayout = new javax.swing.GroupLayout(deleteResultModal);
        deleteResultModal.setLayout(deleteResultModalLayout);
        deleteResultModalLayout.setHorizontalGroup(
            deleteResultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteResultModalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deleteResultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteResultModalLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ttDeleteResult))
                    .addGroup(deleteResultModalLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descDeleteResult))
                    .addGroup(deleteResultModalLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcDeleteResult)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        deleteResultModalLayout.setVerticalGroup(
            deleteResultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteResultModalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deleteResultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ttDeleteResult))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deleteResultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(descDeleteResult))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deleteResultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dcDeleteResult))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(deleteResultModal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(deleteIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(deleteResultModal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
    MouseClick.playNotificationSound();
    
    if (deleteIDTxt.getText().trim().equals("")) {
        JOptionPane.showMessageDialog(this, "Please Enter ID you want to delete");
        return;
    }
    
    // Validate that input is a number
    int typeId;
    try {
        typeId = Integer.parseInt(deleteIDTxt.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid numeric ID");
        return;
    }
    
    // Check if transaction type exists in database
    java.sql.Connection connection = null;
    java.sql.PreparedStatement pstmt = null;
    java.sql.ResultSet rs = null;
    
    try {
        connection = DbConnection.connectToDb();
        
        if (connection == null) {
            JOptionPane.showMessageDialog(this, "Database connection failed!");
            return;
        }
        
        // Query to check if transaction type exists
        String selectQuery = "SELECT TypeName, Description, DefaultCost FROM transactiontype WHERE TypeID = ?";
        pstmt = connection.prepareStatement(selectQuery);
        pstmt.setInt(1, typeId);
        rs = pstmt.executeQuery();
        
        if (rs.next()) {
            // Transaction type exists - display information
            String typeName = rs.getString("TypeName");
            String description = rs.getString("Description");
            java.math.BigDecimal defaultCost = rs.getBigDecimal("DefaultCost");
            
            // Update the display labels
            ttDeleteResult.setText(typeName);
            descDeleteResult.setText(description != null ? description : "None");
            dcDeleteResult.setText(defaultCost != null ? defaultCost.toString() : "None");
            
            // Show the result modal
            deleteResultModal.setVisible(true);
            
            // Create confirmation dialog
            javax.swing.JFrame parentFrame = (javax.swing.JFrame) javax.swing.SwingUtilities.getWindowAncestor(this);
            
            javax.swing.JOptionPane optionPane = new javax.swing.JOptionPane(
                    "Are you sure you want to delete this transaction type?",
                    javax.swing.JOptionPane.QUESTION_MESSAGE,
                    javax.swing.JOptionPane.YES_NO_OPTION
            );
            
            javax.swing.JDialog dialog = optionPane.createDialog(parentFrame, "Confirm Delete");
            
            // Position dialog at center-top of frame
            if (parentFrame != null) {
                int x = parentFrame.getX() + (parentFrame.getWidth() - dialog.getWidth()) / 2;
                int y = parentFrame.getY() + 250;
                dialog.setLocation(x, y);
            }
            
            dialog.setVisible(true);
            
            // Get user's choice
            Object result = optionPane.getValue();
            int deleteChoice = (result != null && result.equals(javax.swing.JOptionPane.YES_OPTION))
                    ? javax.swing.JOptionPane.YES_OPTION
                    : javax.swing.JOptionPane.NO_OPTION;
            
            if (deleteChoice == javax.swing.JOptionPane.YES_OPTION) {
                // Proceed with deletion
                deleteTransactionType(typeId, parentFrame);
            } else {
                // User cancelled - hide modal
                deleteResultModal.setVisible(false);
                // Clear the text field
                deleteIDTxt.setText("");
            }
            
        } else {
            // Transaction type not found
            JOptionPane.showMessageDialog(this, 
                "No transaction type found with ID: " + typeId, 
                "Transaction Type Not Found", 
                JOptionPane.INFORMATION_MESSAGE);
            deleteIDTxt.setText(""); // Clear the input field
        }
        
    } catch (java.sql.SQLException e) {
        JOptionPane.showMessageDialog(this, 
            "Database error: " + e.getMessage(), 
            "Database Error", 
            JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } finally {
        // Close database resources
        try {
            if (rs != null) rs.close();
            if (pstmt != null) pstmt.close();
            if (connection != null) connection.close();
        } catch (java.sql.SQLException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_deleteBtnActionPerformed
private void deleteTransactionType(int typeId, javax.swing.JFrame parentFrame) {
    java.sql.Connection connection = null;
    java.sql.PreparedStatement pstmt = null;
    
    try {
        connection = DbConnection.connectToDb();
        
        if (connection == null) {
            JOptionPane.showMessageDialog(this, "Database connection failed!");
            return;
        }
        
        // Check if there are any transactions using this type
        String checkTransactionsQuery = "SELECT COUNT(*) FROM transaction WHERE TypeID = ?";
        pstmt = connection.prepareStatement(checkTransactionsQuery);
        pstmt.setInt(1, typeId);
        java.sql.ResultSet rs = pstmt.executeQuery();
        
        if (rs.next() && rs.getInt(1) > 0) {
            // There are existing transactions using this type
            JOptionPane.showMessageDialog(parentFrame, 
                "Cannot delete this transaction type because it is being used by existing transactions.", 
                "Cannot Delete", 
                JOptionPane.WARNING_MESSAGE);
            deleteResultModal.setVisible(false);
            deleteIDTxt.setText("");
            return;
        }
        
        rs.close();
        pstmt.close();
        
        // Proceed with deletion
        String deleteQuery = "DELETE FROM transactiontype WHERE TypeID = ?";
        pstmt = connection.prepareStatement(deleteQuery);
        pstmt.setInt(1, typeId);
        
        int rowsAffected = pstmt.executeUpdate();
        
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(parentFrame, 
                "Transaction type deleted successfully!", 
                "Success", 
                JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(parentFrame, 
                "Failed to delete transaction type.", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
        
        // Hide modal and clear input
        deleteResultModal.setVisible(false);
        deleteIDTxt.setText("");
        
        // Reset the display labels
        ttDeleteResult.setText("None");
        descDeleteResult.setText("None");
        dcDeleteResult.setText("None");
        
    } catch (java.sql.SQLException e) {
        JOptionPane.showMessageDialog(parentFrame, 
            "Database error during deletion: " + e.getMessage(), 
            "Database Error", 
            JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
        deleteResultModal.setVisible(false);
    } finally {
        try {
            if (pstmt != null) pstmt.close();
            if (connection != null) connection.close();
        } catch (java.sql.SQLException e) {
            e.printStackTrace();
        }
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dcDeleteResult;
    private test.CustomButton deleteBtn;
    private javax.swing.JTextField deleteIDTxt;
    private javax.swing.JPanel deleteResultModal;
    private javax.swing.JLabel descDeleteResult;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel ttDeleteResult;
    // End of variables declaration//GEN-END:variables
}
