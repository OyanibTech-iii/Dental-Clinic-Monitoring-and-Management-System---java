/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package test;

import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class FindTransactionByID extends javax.swing.JPanel {

    /**
     * Creates new form FindTransactionByID
     */
    public FindTransactionByID() {
        initComponents();
        resultModal.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        transLabel = new javax.swing.JLabel();
        findIDTxt = new javax.swing.JTextField();
        resultModal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        transTypeTxt = new javax.swing.JLabel();
        dscTxt = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        searchBtn = new test.CustomButton();

        setBackground(new java.awt.Color(0, 119, 204));
        setMaximumSize(new java.awt.Dimension(452, 180));
        setMinimumSize(new java.awt.Dimension(452, 180));
        setPreferredSize(new java.awt.Dimension(452, 180));

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Find Transaction By ID");

        transLabel.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        transLabel.setForeground(new java.awt.Color(255, 255, 255));
        transLabel.setText("Enter transaction type ID :");

        findIDTxt.setBackground(new java.awt.Color(0, 119, 204));
        findIDTxt.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        findIDTxt.setForeground(new java.awt.Color(255, 255, 255));
        findIDTxt.setBorder(null);

        resultModal.setBackground(new java.awt.Color(0, 119, 204));

        jLabel4.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Transaction Type:");

        jLabel5.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Description: ");

        jLabel3.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cost:");

        transTypeTxt.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        transTypeTxt.setForeground(new java.awt.Color(255, 255, 255));
        transTypeTxt.setText("None");

        dscTxt.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        dscTxt.setForeground(new java.awt.Color(255, 255, 255));
        dscTxt.setText("None");

        jLabel6.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("None");

        javax.swing.GroupLayout resultModalLayout = new javax.swing.GroupLayout(resultModal);
        resultModal.setLayout(resultModalLayout);
        resultModalLayout.setHorizontalGroup(
            resultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultModalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(resultModalLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transTypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultModalLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dscTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(resultModalLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        resultModalLayout.setVerticalGroup(
            resultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultModalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(transTypeTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dscTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultModalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/searchBtn.png"))); // NOI18N
        searchBtn.setText("Search");
        searchBtn.setBorderColor(new java.awt.Color(0, 51, 0));
        searchBtn.setColor(new java.awt.Color(0, 51, 0));
        searchBtn.setColorClick(new java.awt.Color(4, 20, 1));
        searchBtn.setColorOver(new java.awt.Color(0, 102, 0));
        searchBtn.setFont(new java.awt.Font("Poppins Medium", 1, 12)); // NOI18N
        searchBtn.setRadius(10);
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resultModal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(transLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transLabel)
                    .addComponent(findIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultModal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        MouseClick.playNotificationSound();
        // Validate input
        if (findIDTxt.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a Transaction ID to search");
            return;
        }

        // Validate that input is a number
        int transactionId;
        try {
            transactionId = Integer.parseInt(findIDTxt.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid numeric Transaction ID");
            return;
        }
        // Search for transaction in database
        searchTransaction(transactionId);
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchTransaction(int transactionId) {
        java.sql.Connection connection = null;
        java.sql.PreparedStatement pstmt = null;
        java.sql.ResultSet rs = null;

        try {
            connection = DbConnection.connectToDb();

            if (connection == null) {
                JOptionPane.showMessageDialog(this, "Database connection failed!");
                return;
            }

            // Query to get transaction type, description (remarks), and cost
            String query = "SELECT "
                    + "tt.TypeName, "
                    + "tt.Description, "
                    + "tt.DefaultCost "
                    + "FROM transactiontype tt "
                    + "WHERE tt.TypeID = ?";

            pstmt = connection.prepareStatement(query);
            pstmt.setInt(1, transactionId);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                // Transaction found - populate the result modal with only the 3 fields

                String typeName = rs.getString("TypeName");
                transTypeTxt.setText(typeName != null ? typeName : "Unknown Type");

                // Description
                String description = rs.getString("Description");
                dscTxt.setText(description != null && !description.trim().isEmpty() ? description : "No description");

                // Default Cost
                java.math.BigDecimal defaultCost = rs.getBigDecimal("DefaultCost");
//                jLabel6.setText(defaultCost != null ? "₱" + defaultCost.toString() : "Not specified");
                try {
                    // Load Poppins font (ensure it's available in your project or system)
                    jLabel6.setFont(new java.awt.Font("Poppins", java.awt.Font.PLAIN, 12)); // Adjust size as needed
                    jLabel6.setText(defaultCost != null ? "\u20B1" + String.format("%.2f", defaultCost) : "Not specified");
                } catch (Exception e) {
                    // Fallback to a font that supports the peso sign if Poppins fails
                    jLabel6.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 12));
                    jLabel6.setText(defaultCost != null ? "\u20B1" + String.format("%.2f", defaultCost) : "Not specified");
                    e.printStackTrace();
                }

                // Show the result modal
                resultModal.setVisible(true);

                // Show success message
                JOptionPane.showMessageDialog(this,
                        "Transaction found successfully!",
                        "Search Result",
                        JOptionPane.INFORMATION_MESSAGE);

            } else {
                // Transaction not found
                JOptionPane.showMessageDialog(this,
                        "No transaction found with ID: " + transactionId,
                        "Transaction Not Found",
                        JOptionPane.INFORMATION_MESSAGE);
                findIDTxt.setText("");

                // Hide result modal and clear previous results
                resultModal.setVisible(false);
                clearResults();
            }

        } catch (java.sql.SQLException e) {
            JOptionPane.showMessageDialog(this,
                    "Database error: " + e.getMessage(),
                    "Database Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            // Close database resources
            try {
                if (rs != null) {
                    rs.close();
                }
                if (pstmt != null) {
                    pstmt.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (java.sql.SQLException e) {
                e.printStackTrace();
            }
        }
    }

    // Helper method to clear previous search results
    private void clearResults() {
        transTypeTxt.setText("None");
        dscTxt.setText("None");
        jLabel6.setText("None");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dscTxt;
    private javax.swing.JTextField findIDTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel resultModal;
    private test.CustomButton searchBtn;
    private javax.swing.JLabel transLabel;
    private javax.swing.JLabel transTypeTxt;
    // End of variables declaration//GEN-END:variables
}
