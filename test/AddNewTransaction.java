/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbproject/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package test;

import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class AddNewTransaction extends javax.swing.JPanel implements TransactionTypeServiceAware {

    private TransactionTypeService transactionTypeService;

    /**
     * Creates new form AddNewTransaction
     */
    public AddNewTransaction() {
        initComponents();
    }

    @Override
    public void setTransactionTypeService(TransactionTypeService transactionTypeService) {
        this.transactionTypeService = transactionTypeService;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        transTypeNameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        descriptionTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        addTransBtn = new test.CustomButton();

        setBackground(new java.awt.Color(0, 119, 204));
        setMaximumSize(new java.awt.Dimension(452, 180));
        setMinimumSize(new java.awt.Dimension(452, 180));
        setPreferredSize(new java.awt.Dimension(452, 180));

        jLabel1.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add New Transaction Type");

        jLabel2.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Transaction Type Name:");

        transTypeNameTxt.setBackground(new java.awt.Color(0, 119, 204));
        transTypeNameTxt.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        transTypeNameTxt.setForeground(new java.awt.Color(255, 255, 255));
        transTypeNameTxt.setBorder(null);

        jLabel3.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Description:");

        descriptionTxt.setBackground(new java.awt.Color(0, 119, 204));
        descriptionTxt.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        descriptionTxt.setForeground(new java.awt.Color(255, 255, 255));
        descriptionTxt.setBorder(null);

        jLabel4.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Default Cost:");

        jTextField1.setBackground(new java.awt.Color(0, 119, 204));
        jTextField1.setFont(new java.awt.Font("Poppins Light", 0, 12)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setBorder(null);

        addTransBtn.setForeground(new java.awt.Color(255, 255, 255));
        addTransBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/addBtn.png"))); // NOI18N
        addTransBtn.setText("Add Type");
        addTransBtn.setBorderColor(new java.awt.Color(0, 51, 0));
        addTransBtn.setColor(new java.awt.Color(0, 51, 0));
        addTransBtn.setColorClick(new java.awt.Color(9, 37, 3));
        addTransBtn.setColorOver(new java.awt.Color(0, 102, 0));
        addTransBtn.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        addTransBtn.setRadius(10);
        addTransBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTransBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(transTypeNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(descriptionTxt))))
                .addContainerGap(146, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addTransBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(transTypeNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(descriptionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(addTransBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addTransBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTransBtnActionPerformed
        // TODO add your handling code here:
        String typeName = transTypeNameTxt.getText().trim();
        String description = descriptionTxt.getText().trim();
        String defaultCostText =  jTextField1.getText().trim();

        // Validation
        if (typeName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a transaction type name.", "Validation Error", JOptionPane.WARNING_MESSAGE);
            transTypeNameTxt.requestFocus();
            return;
        }

        if (description.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a description.", "Validation Error", JOptionPane.WARNING_MESSAGE);
            descriptionTxt.requestFocus();
            return;
        }

        if (defaultCostText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a default cost.", "Validation Error", JOptionPane.WARNING_MESSAGE);
          jTextField1.requestFocus();
            return;
        }

        // Validate default cost is a valid number
        double defaultCost;
        try {
            defaultCost = Double.parseDouble(defaultCostText);
            if (defaultCost < 0) {
                JOptionPane.showMessageDialog(this, "Default cost cannot be negative.", "Validation Error", JOptionPane.WARNING_MESSAGE);
                jTextField1.requestFocus();
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number for default cost.", "Validation Error", JOptionPane.WARNING_MESSAGE);
             jTextField1.requestFocus();
            return;
        }

        // Check if service is available
        if (transactionTypeService == null) {
            JOptionPane.showMessageDialog(this, "Transaction service is not available.", "Service Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create TransactionType object
        TransactionType newType = new TransactionType();
        newType.setTypeName(typeName);
        newType.setDescription(description);
        newType.setDefaultCost(defaultCost);

        // Save using service
        try {
            int result = transactionTypeService.saveTransactionType(newType);
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Transaction type added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Clear the form fields
                transTypeNameTxt.setText("");
                descriptionTxt.setText("");
                 jTextField1.setText("");

                // Set focus back to the first field
                transTypeNameTxt.requestFocus();

                // Optional: Play success sound if MouseClick class is available
                try {
                    MouseClick.playClickSound();
                } catch (Exception soundEx) {
                    // Ignore if sound class is not available
                }
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add transaction type. Type name may already exist.", "Save Failed", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            System.err.println("Error saving transaction type: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error saving transaction type: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addTransBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private test.CustomButton addTransBtn;
    private javax.swing.JTextField descriptionTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField transTypeNameTxt;
    // End of variables declaration//GEN-END:variables
}
